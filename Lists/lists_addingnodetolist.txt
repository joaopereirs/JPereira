#include <iostream>

struct IntListNode{
    int val;
    IntListNode* next;
};

int main(){
    IntListNode* l;
    l = NULL; // 1

    IntListNode* tmp; // 2

    tmp = new IntListNode; // 3
    (*tmp).val = 2; // 4
    (*tmp).next = l; // 5

    l = tmp; // 6

    tmp = new IntListNode; // 7
    (*tmp).val = 3; // 8
    (*tmp).next = l; // 9

    l = tmp; // 10

    IntListNode* lit;
    lit = l;

    while(lit != NULL){
        std::cout << (*lit).val << std::endl;
        lit = (*lit).next;
    }

    lit = l;

    /*while(lit != NULL){ //have to remove this or else the initial nodes become deallocated, so it doesnt
        tmp = (*lit).next; //remember what the original values are.
        delete lit;
        lit = tmp;
    }*/

    tmp = new IntListNode; // 7
    *tmp->val = 4; // 8
    *tmp->next = l; // 9

    l = tmp; // 10

    IntListNode* lit2;
    lit2=l;
    std::cout<<"The new list is"<<std::endl;
    while(lit2 != NULL){
        std::cout << (*lit2).val << std::endl;
        lit2 = (*lit2).next;
    }

    lit2 = l;

    while(lit2 != NULL){
        tmp = (*lit2).next;
        delete lit2;
        lit2 = tmp;
    }

}
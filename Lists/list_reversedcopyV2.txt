#include <iostream>
#include <cmath>
#include <string>
#include <vector>
#include <fstream>
#include <cstdlib>

typedef int list_t;

struct ListNode{
    list_t val;
    ListNode* next;
};

void print_list(ListNode* l){
    while(l != NULL){
        std::cout << l->val << std::endl;
        l = l->next;
    }
}

ListNode* cons_list(list_t e, ListNode* l){
    ListNode* tmp;
    tmp = new ListNode;
    tmp->val = e;
    tmp->next = l;
    return tmp;
}

ListNode* reversed_copy_list(ListNode* l){
    ListNode* n = NULL;
    while(l != NULL){
        n=cons_list(l->val,n);
        l = l->next;
    }
    return n;
}

void deallocate_list(ListNode* l){
    ListNode* tmp;
    while(l != NULL){
        tmp = l->next;
        delete l;
        l = tmp;
    }
}

int main(){
    std::ifstream infile;
    infile.open("input.txt");

    if(!infile.is_open()){
        std::cout << "error opening file" << std::endl;
        return EXIT_FAILURE;
    }

    list_t tmp;
    ListNode* l = NULL;
    while(infile >> tmp){
        l = cons_list(tmp, l);
    }

    infile.close();

    std::cout<<"original list: "<<std::endl;
    print_list(l);
    std::cout<<std::endl;

    std::cout<<"new list: "<<std::endl;
    print_list(reversed_copy_list(l));

    deallocate_list(l);
}
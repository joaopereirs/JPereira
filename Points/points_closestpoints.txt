#include <iostream>
#include <cmath>
#include <string>
#include <vector>
#include <fstream>
#include <cstdlib>

struct Point{
    double x;
    double y;
};

double distance_points(Point p1, Point p2){
    return std::sqrt(std::pow((p1.x - p2.x), 2) + std::pow((p1.y - p2.y), 2));
}

std::string point_to_s(Point p){
    return "(" + std::to_string(p.x) + ", " + std::to_string(p.y) + ")";
}

// idxp1 and idxp2 are output parameters
// after the function call they will contain
// the indices of the two closest points in vp
// if vp contains two points or more
// (otherwise they will just contain uninitialised values)

void closest_points(const std::vector<Point>& vp, int& idxp1, int& idxp2){

    int tmp=std::numeric_limits<int>::max();
    for(int i=0; i<vp.size();i++){
        for (int j = 0; j < vp.size(); ++j) {
            if (j!=i){
                if (distance_points(vp[i], vp[j])<tmp){
                    tmp=distance_points(vp[i], vp[j]);
                    idxp1=i;
                    idxp2=j;
                }
            }
        }
    }
}

int main(){


    std::ifstream infile;
    infile.open("points.txt");

    if(!infile.is_open()){
        std::cout << "error opening file" << std::endl;
        return EXIT_FAILURE;
    }

    std::vector<Point> points;
    Point tmp;

    while(infile >> tmp.x >> tmp.y){
        points.push_back(tmp);
    }

    infile.close();

    if(points.size() == 0){
        std::cout << "there are no points in the file" << std::endl;
    }
    else if(points.size() == 1){
        std::cout << "there is only one point in the file" << std::endl;
    }
    else{
        int idxp1, idxp2;
        closest_points(points, idxp1, idxp2);

        std::cout<<"the two coordinates are: ("+std::to_string(points[idxp1].x)+","+std::to_string(points[idxp1].y)+") "+"("+std::to_string(points[idxp2].x)+","+std::to_string(points[idxp2].y)+")"<<std::endl;

    }
}
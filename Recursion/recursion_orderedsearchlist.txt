#include <iostream>
#include <cmath>
#include <string>
#include <vector>
#include <fstream>
#include <cstdlib>

typedef int list_t;

struct ListNode{
    list_t val;
    ListNode* next;
};

ListNode* cons_list(list_t e, ListNode* l){
    ListNode* tmp;

    tmp = new ListNode;

    tmp->val = e;
    tmp->next = l;

    return tmp;
}

void deallocate_list_rec(ListNode* l){
    ListNode* tmp;

    if(l != NULL){
        tmp = l->next;
        delete l;
        deallocate_list_rec(tmp);
    }
}

int length_list_rec(ListNode* l){
    if(l != NULL){
        return 1 + length_list_rec(l->next);
    }
    else {
        return 0;
    }
}


bool search_ordered_list_rec(list_t e, ListNode* l){ //value looking for is e in the list l
    if (length_list_rec(l)==0){
        return false;
    } else if (l->val<e){
        std::cout<<l->val<<std::endl; //to check which values are being read through
        return search_ordered_list_rec(e,l->next);
    } else if (l->val==e){
        return true;
    } else {
        return false;
    }

}

int main(){
    std::ifstream infile;
    infile.open("input.txt");

    if(!infile.is_open()){
        std::cout << "error opening file" << std::endl;
        return EXIT_FAILURE;
    }

    list_t tmp;
    ListNode* l = NULL;
    while(infile >> tmp){
        l = cons_list(tmp, l);
    }

    infile.close();
    list_t e;
    std::cout<<"what value would you like to know if it is in the list?"<<std::endl;
    std::cin>>e;
    if (search_ordered_list_rec(e,l)){
        std::cout<<"value is in the list!"<<std::endl;
    } else {
        std::cout<<"the value was NOT found in the list..."<<std::endl;
    }

    deallocate_list_rec(l);
}